{"version":3,"sources":["components/Songs.js","components/Player.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data/jashna.mp3","data/jashna.png","data/saude_baji.mp3","data/saude_baji.png","data.js","App.js","reportWebVitals.js","index.js"],"names":["Song","currentSong","rotateState","isPlaying","className","src","cover","alt","name","artist","Player","setCurrentSong","setIsPlaying","audioRef","songInfo","setSongInfo","songs","setSongs","useEffect","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","currentTime","min","max","duration","value","onChange","e","target","type","size","icon","faStepBackward","onClick","pause","faPause","faPlay","faStepForward","LibrarySong","songSelectHandler","Library","libraryStatus","setLibraryStatus","Nav","faTimes","faBars","ChillHop","color","uuidv4","audio","picture_of_jashna","audio_of_jashna","picture_of_saude","audio_of_saude","App","useRef","useState","timeUpadateHandler","data","songEndHandler","style","background","Songs","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7e5f03b.chunk.js","sourcesContent":["import { React } from \"react\";\r\nimport \"../styles/app.scss\";\r\nconst Song = ({ currentSong, isPlaying }) => {\r\n  let rotateState = \"paused\";\r\n  if (isPlaying) {\r\n    rotateState = \"playing\";\r\n  } else {\r\n    rotateState = \"paused\";\r\n  }\r\n  return (\r\n    <div className=\"song-container\">\r\n      <h1>Now Playing</h1>\r\n      <div className=\"cover-container\">\r\n        <img\r\n          src={currentSong.cover}\r\n          alt={currentSong.name}\r\n          className={rotateState}\r\n        />\r\n      </div>\r\n      <h1>{currentSong.name}</h1>\r\n      <h2>{currentSong.artist}</h2>\r\n    </div>\r\n  );\r\n};\r\nexport default Song;\r\n","import { React, useEffect } from \"react\";\r\nimport \"../styles/_player.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faPause,\r\n  faStepForward,\r\n  faStepBackward,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n// Main Player component\r\nconst Player = ({\r\n  currentSong,\r\n  setCurrentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n  songs,\r\n  setSongs,\r\n}) => {\r\n  useEffect(() => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === currentSong.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  }, [currentSong]);\r\n\r\n  // time converter\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n  const dragEventHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip_back\") {\r\n      if (currentIndex === 0) {\r\n        setCurrentSong(songs[songs.length - 1]);\r\n        if (isPlaying) audioRef.current.play();\r\n        return;\r\n      }\r\n      setCurrentSong(songs[currentIndex - 1]);\r\n    }\r\n    if (direction === \"skip_forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  return (\r\n    <div className=\"player-controls\">\r\n      <div className=\"time-controls\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <input\r\n          className=\"range-input\"\r\n          min=\"0\"\r\n          max={songInfo.duration || 0}\r\n          value={songInfo.currentTime}\r\n          onChange={dragEventHandler}\r\n          type=\"range\"\r\n        />\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-controls\">\r\n        <FontAwesomeIcon\r\n          className=\"seek-backward icon\"\r\n          size=\"2x\"\r\n          icon={faStepBackward}\r\n          onClick={() => skipTrackHandler(\"skip_back\")}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play icon\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          className=\"seek-forward icon\"\r\n          size=\"2x\"\r\n          icon={faStepForward}\r\n          onClick={() => skipTrackHandler(\"skip_forward\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Player;\r\n","import React from \"react\";\r\nconst LibrarySong = ({\r\n  isPlaying,\r\n  song,\r\n  setCurrentSong,\r\n  audioRef,\r\n  songs,\r\n  id,\r\n  setSongs,\r\n}) => {\r\n  let rotateState = \"paused\";\r\n  if (isPlaying) {\r\n    rotateState = \"playing\";\r\n  } else {\r\n    rotateState = \"paused\";\r\n  }\r\n  const songSelectHandler = async () => {\r\n    await setCurrentSong(song);\r\n\r\n    if (isPlaying) audioRef.current.play();\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  };\r\n  return (\r\n    <div\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n      onClick={songSelectHandler}\r\n    >\r\n      <img src={song.cover} alt={song.name} className={rotateState} />\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\nconst Library = ({\r\n  currentSong,\r\n  setCurrentSong,\r\n  isPlaying,\r\n  songs,\r\n  audioRef,\r\n  setSongs,\r\n  libraryStatus,\r\n  setLibraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n      <h1>Library </h1>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            songs={songs}\r\n            key={song.id}\r\n            id={song.id}\r\n            song={song}\r\n            currentSong={currentSong}\r\n            isPlaying={isPlaying}\r\n            setCurrentSong={setCurrentSong}\r\n            audioRef={audioRef}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n  return (\r\n    <nav className=\"nav\">\r\n      <h1>SN Music</h1>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        <span id=\"library-text\">Library </span>{\" \"}\r\n        <FontAwesomeIcon icon={libraryStatus ? faTimes : faBars} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\nexport default Nav;\r\n","export default __webpack_public_path__ + \"static/media/jashna.4f10e767.mp3\";","export default __webpack_public_path__ + \"static/media/jashna.44ddb71d.png\";","export default __webpack_public_path__ + \"static/media/saude_baji.bb95a501.mp3\";","export default __webpack_public_path__ + \"static/media/saude_baji.2f92d82d.png\";","import { v4 as uuidv4 } from 'uuid'\r\nimport audio_of_jashna from './data/jashna.mp3'\r\nimport picture_of_jashna from './data/jashna.png'\r\nimport audio_of_saude from './data/saude_baji.mp3'\r\nimport picture_of_saude from './data/saude_baji.png'\r\n\r\nfunction ChillHop() {\r\n  return [\r\n    {\r\n      name: 'Cycles',\r\n      artist: 'Suwm',\r\n      cover:\r\n        'https://chillhop.com/wp-content/uploads/2021/03/74d62bc9370a68e440c1b98eaf650344f0a7faea-1024x1024.jpg',\r\n      color: ['#263232', '#48433A'],\r\n      active: true,\r\n      id: uuidv4(),\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=15230',\r\n    },\r\n    {\r\n      name: 'Reflect',\r\n      artist: 'Suwm',\r\n      cover:\r\n        'https://chillhop.com/wp-content/uploads/2021/03/75adfe0661d06a9ea66d9c2e99b31e92ae450ebe-1024x1024.jpg',\r\n      color: ['#EF452E', '#3DBBA3'],\r\n      active: false,\r\n      id: uuidv4(),\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=15238',\r\n    },\r\n    {\r\n      name: 'Jashan-E-Bahara [Slowed+Reverb]',\r\n      artist: 'Javed-Ali',\r\n      cover: picture_of_jashna,\r\n      color: ['#EC95AC', '#A7578B'],\r\n      active: false,\r\n      id: uuidv4(),\r\n      audio: audio_of_jashna,\r\n    },\r\n    {\r\n      name: 'Saude Baaji [Slowed+Reverb]',\r\n      artist: 'Anupam Amod',\r\n      cover: picture_of_saude,\r\n      color: ['#9D587F', '#7A8883'],\r\n      active: false,\r\n      id: uuidv4(),\r\n      audio: audio_of_saude,\r\n    },\r\n  ]\r\n}\r\nexport default ChillHop\r\n","import { React, useState, useRef } from \"react\";\nimport \"./styles/app.scss\";\n// components\nimport Songs from \"./components/Songs\";\nimport Player from \"./components/Player\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\nimport data from \"./data\";\nconst App = () => {\n  const audioRef = useRef(0);\n  // state\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n  });\n\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  // timeUpdate function\n  const timeUpadateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo, currentTime: current, duration });\n  };\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n  return (\n    <div\n      className=\"app\"\n      style={{\n        background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\n      }}\n    >\n      <div className={`${libraryStatus ? \"contents\" : \"\"}`}>\n        <Nav\n          libraryStatus={libraryStatus}\n          setLibraryStatus={setLibraryStatus}\n        />\n        <div className=\"music-section\">\n          <Songs currentSong={currentSong} isPlaying={isPlaying} />\n          <Player\n            currentSong={currentSong}\n            setCurrentSong={setCurrentSong}\n            isPlaying={isPlaying}\n            setIsPlaying={setIsPlaying}\n            audioRef={audioRef}\n            songInfo={songInfo}\n            setSongInfo={setSongInfo}\n            songs={songs}\n            setSongs={setSongs}\n          />\n        </div>\n        <Library\n          songs={songs}\n          setSongs={setSongs}\n          currentSong={currentSong}\n          setCurrentSong={setCurrentSong}\n          isPlaying={isPlaying}\n          className=\"library-section\"\n          audioRef={audioRef}\n          libraryStatus={libraryStatus}\n          setLibraryStatus={setLibraryStatus}\n        />\n        <audio\n          onTimeUpdate={timeUpadateHandler}\n          onLoadedMetadata={timeUpadateHandler}\n          ref={audioRef}\n          src={currentSong.audio}\n          onEnded={songEndHandler}\n        ></audio>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles/app.scss\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}